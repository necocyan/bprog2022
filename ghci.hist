:q
sample
crack (encode 3 "boxing wizards jump quickly")
crack sample
 sample
:r
positions False [True, False, True, False]
:r
[ chisqr (rotate n table') table | n <- [0 .. 25] ]
:r
:r
sample
:r
sample
rotate 3 [1,2,3,4,5]
:r
freqs "abcdefggggg"
freqs "abbcccddddeeeee"
count 's' "mississippi"
lowers "OCOMOMIYAKI ta"
lowers "Foo Bar Baz"
lowers "This"
lowers "this"
:r
:r
percent 3 9
percent 6 3
percent 1 3
:r
:r
table 
:r
encode 3 "necocyan"
encode (-3) it
encode (-3) it
encode 3 "haskell is fun"
:r
shift 3 'abc'
shift (-3) 'c'
shift (-3) 'd'
shift 3 'A'
:r
shift 3 'z'
:r
;r
shift 3 'z'
shift 10 'a'
shift 3 'z'
shift 5 'a'
shift 3 'k'
shift 3 'a'
:r
shift 3 'a'
int2let (let2int 'k')
int2let 15
int2let 0
:r
let2int 'b'
let2int 'p'
let2int 'z'
let2int 'a'
ord 'a'
:r
:r
:l src/Caesar.hs
:q
quadruple 4
[1 ..]
take 50 [1 ..]
take 3 [1 ..]
quadruple 4
quadruple 2
kkk
double (1 + 3)
double 4 - 3
>>> double 12 - 3
1 + 4
(1 + 2) * 3
double 4 - 2
1 + 2 * 3
double 2 + 4
double 3
:load src/First.hs
>>> :load src/First.hs
